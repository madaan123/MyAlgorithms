#include<bits/stdc++.h>
using namespace std;

/*
A randomized version of quick sort
a random number is generated by srand function and it is made the pivot in each iteration
*/

int partition(int a[],int start,int end)
{
	srand(time(NULL));
	int random=rand()%(end-start+1);
	//cout<<random<<endl;
	swap(a[start],a[start+random]);
	int pivot=a[start];
	int p=end;
	for(int i=end;i>start;i--)
	{
		if(a[i]>=pivot)
		{
			swap(a[i],a[p--]);
		}
	}
	swap(a[start],a[p]);
	return p;
}


void quick_sort(int a[],int start,int end)
{
	if(start<end)
	{
		int pindex=partition(a,start,end);
		quick_sort(a,start,pindex-1);
		quick_sort(a,pindex+1,end);
	}
}

int main()
{
	int n;
	cin>>n;
	int a[n];
	for(int i=0;i<n;i++)
	cin>>a[i];
	quick_sort(a,0,n-1);
	for(int i=0;i<n;i++)
	cout<<a[i]<<" ";
}
